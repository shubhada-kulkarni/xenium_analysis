---
title: "Xenium post-processing"
author:  "Shubhada Kulkarni"
date: "23 July 2024"
format: html
editor: visual
---

## INFO

This Quarto computational documents includes post-processing of already clustered Xenium data generated using `process_Xenium_data.R` script. This post-processing includes

-   \[\] Merging and batch-effect correction of data per slide.
-   \[\] Post-merging processing
-   \[\] Cell-type annotations

## Cell-type annotations

Loading required libraries
```{r eval=FALSE}
library(ggplot2, lib.loc = "/beegfs/homes/skulkarni/R/x86_64-pc-linux-gnu-library/4.3")
library(Seurat, lib.loc = "/beegfs/homes/skulkarni/R/x86_64-pc-linux-gnu-library/4.3")
library(patchwork)
library(markdown)
library(rmarkdown)
library(dplyr, lib.loc = "/beegfs/homes/skulkarni/R/x86_64-pc-linux-gnu-library/4.3")
library(presto, lib.loc = "/beegfs/homes/skulkarni/R/x86_64-pc-linux-gnu-library/4.3")
library(stringr)
```

### Slide 0018072
Read the merged and processed Xenium data for slide 18072
```{r eval=FALSE}
xenium.obj_18072 <- readRDS("/prj/XeniumProbeDesign/heart_human_29072024/xenium_objects_R/18072_merged_processed.rds")
```

<!-- I originally retain all cells. So here I filter for cells with low total counts -->
<!-- ```{r eval=FALSE} -->
<!-- xenium.obj_18072 <- FindClusters(xenium.obj_18072, resolution = 1) -->
<!-- xenium.obj_18072 <- subset(xenium.obj_18072, nCount_Xenium > 50) -->
<!-- ``` -->

Finding marker genes using presto package (much faster than Seurat functions)
```{r eval=FALSE}
all_markers_18072 <- presto::wilcoxauc(xenium.obj_18072,  seurat_assay = "SCT", group_by = "seurat_clusters")
write.csv(all_markers_18072, "/prj/XeniumProbeDesign/heart_human_29072024//xenium_objects_R/0018072_merged_markergenes.csv", quote = F)
```

Dimplot with spatial ImageDimPlot
```{r fig.align='center',fig.width=20, fig.height=10}
DimPlot(xenium.obj_18072, label = T, label.size = 5) | ImageDimPlot(xenium.obj_18072)
```

nCount plot to see distribution of gene counts per cell
```{r fig.align='center',fig.width=20, fig.height=10}
VlnPlot(xenium.obj_18072, c("nCount_Xenium"), pt.size = 0) + guides(fill="none")
```

nFeature plot to see distribution of #genes per cell
```{r fig.align='center',fig.width=20, fig.height=10}
VlnPlot(xenium.obj_18072, c("nFeature_Xenium"), pt.size = 0) + guides(fill="none")
```

Check circle versus linear expression present in each cell. For this, subset the seurat object for circle and linear
```{r eval=FALSE}
all_panel <- rownames(xenium.obj_18072[["SCT"]]$counts)
circles <- all_panel[grepl("*-BSJ*", all_panel)]
linears <- setdiff(all_panel, circles)
subset_matrix_circle <- xenium.obj_18072[["SCT"]]$counts[circles,]
subset_matrix_linear <- xenium.obj_18072[["SCT"]]$counts[linears,]
object_circle <-  CreateSeuratObject(subset_matrix_circle)
object_linear <- CreateSeuratObject(subset_matrix_linear)
```

Distributions of nCount and nFeatures for linear and circular RNAs
```{r fig.align='center', fig.width=9, fig.height=9}
boxplot(object_circle$nCount_RNA, object_linear$nCount_RNA, names = c("Circle", "Linear"), col = c("red","blue"), main = "Total counts per cell")

boxplot(object_circle$nFeature_RNA, object_linear$nFeature_RNA, names = c("Circle", "Linear"), col = c("red","blue"), main = "#RNA molecules per cell")
```

### Cluster-annotations
Featureplot function with ImageDimPlot 
```{r eval=FALSE}
plot_featureplots <- function(gene){
  p1 <- FeaturePlot(xenium.obj_18072, c(gene), label = T) + labs(title = "On UMAP Level")
  p2 <- ImageFeaturePlot(xenium.obj_18072, features = gene, dark.background = F) + labs(title = "On Spatial Level")
  return(p1 | p2)
}
```

AVN subtypes from Kanemaru et al., 2023 https://www.nature.com/articles/s41586-023-06311-1

Cardiomyocytes - 0, 1, 2, 4. Cluster 8 has no clear marker but has high expression of TTN so this is also probably a CM cluster.
```{r fig.align='center', fig.width=10, fig.height=10}
FeaturePlot(xenium.obj_18072, c("TTN-FSJ3"), label = T, label.size = 5)
```

Fibroblasts (markers from https://www.biorxiv.org/content/10.1101/2024.04.27.591127v1.full) - 3, 10, 13, 14, 17
```{r}
FeaturePlot(xenium.obj_18072, c("FBLN1", "LTBP2", "PDGFRA", "TNC"), label = T)
```

Pericytes - 6 and 16
```{r}
FeaturePlot(xenium.obj_18072, c("PDGFRB"), label = T)
```

Endothelial cells - 5, 9, 11, 12-like EC
```{r fig.align='center',fig.width=20, fig.height=10}
FeaturePlot(xenium.obj_18072, c("VWF", "PECAM1"), label = T, label.size = 5)
```

Macrophages - cluster 7
```{r fig.align='center',fig.width=20, fig.height=10}
FeaturePlot(xenium.obj_18072, c("CD14", "MS4A6A"), label = T, label.size = 5)
```

Immune cells - cluster 15
```{r}
FeaturePlot(xenium.obj_18072, c("CXCR4", "CCL5"), label = T, label.size = 5)
```

Pacemaker cells - cluster 11
```{r fig.align='center',fig.width=20, fig.height=10}
FeaturePlot(xenium.obj_18072, c("MYH11"), label = T, label.size = 5)
```

<!-- AVN-Bundle cells - cluster 3, 13 -->
<!-- ```{r fig.align='center',fig.width=20, fig.height=10} -->
<!-- FeaturePlot(xenium.obj_18072, c("LTBP2"), label = T, label.size = 5) -->
<!-- ``` -->

<!-- AVN-Pacemaker cells - cluster 14 -->
<!-- ```{r fig.align='center',fig.width=20, fig.height=10} -->
<!-- FeaturePlot(xenium.obj_18072, c("FBLN1"), label = T, label.size = 5) -->
<!-- ``` -->

Rename clusters with real names
```{r eval=FALSE}
new.cluster.ids <- c("CM", "CM", "CM", "Fibroblasts", "CM", "Vascular", "Pericytes", "Macrophages",
                     "CM-like", "Vascular", "Fibroblasts", "Pacemaker", "EC-like", "Fibroblasts",
                     "Fibroblasts", "Immune", "Pericytes-like", "Fibroblasts")
names(new.cluster.ids) <- levels(xenium.obj_18072)
xenium.obj_18072 <- RenameIdents(xenium.obj_18072, new.cluster.ids)
```

Marker genes on renamed idents
```{r eval=FALSE}
xenium.obj_18072$seurat_clusters_renamed <- Idents(xenium.obj_18072)
all_markers_18072_renamed <- presto::wilcoxauc(xenium.obj_18072,  seurat_assay = "SCT", group_by = "seurat_clusters_renamed")
write.csv(all_markers_18072_renamed, "/prj/XeniumProbeDesign/heart_human_29072024//xenium_objects_R/0018072_merged_markergenes_renamed.csv", quote = F)
```

Spatial plot after renaming cell clusters
```{r}
ImageDimPlot(xenium.obj_18072, dark.background = F, flip_xy = F, size = 1)
```

### Some checks for circles
#### Expression of circle w.r.t. their linear counterpart
We have 27 circles in our current dataset. (after filtering)
```{r eval=FALSE}
all_panel <- Features(xenium.obj_18072)
circles <- all_panel[grepl("*-BSJ*", all_panel)]
```

For circles for which no expression patterns are present, check if their linear counterparts are expressed or no Also check their % of cells expressing this molecule
```{r}
vec_mean_expr_circle <- c()
vec_mean_expr_linear <- c()
fig_dict <- "/prj/XeniumProbeDesign/heart_human_29072024/analysis_figures/"
for (each_circle in circles){
  # print(each_circle)
  gene <- strsplit(each_circle, "-")[[1]][1]
  all_grep <- Features(xenium.obj_18072)[grepl(gene, Features(xenium.obj_18072))]
  each_linear <- all_grep[grepl("FSJ", all_grep)]
  
  expr_circle <- xenium.obj_18072[["SCT"]]$data[each_circle,]
  expr_linear <- xenium.obj_18072[["SCT"]]$data[each_linear,]
  
  percent_cells_expressed_circle <- sum(xenium.obj_18072[["SCT"]]$data[each_circle,] > 0)/length(Cells(xenium.obj_18072))*100
  percent_cells_expressed_linear <- sum(xenium.obj_18072[["SCT"]]$data[each_linear,] > 0)/length(Cells(xenium.obj_18072))*100
  
  print(paste(each_circle, each_linear, percent_cells_expressed_circle, percent_cells_expressed_linear, mean(expr_circle), mean(expr_linear), max(expr_circle), max(expr_linear), as.vector(cor.test(expr_circle, expr_linear)$estimate)))
  
  vec_mean_expr_circle <- c(vec_mean_expr_circle, mean(expr_circle))
  vec_mean_expr_linear <- c(vec_mean_expr_linear, mean(expr_linear))
  # featureplot
  png(paste(fig_dict, "featureplot_circle_linear_", gene, ".png", sep = ""), width = 1000, height = 600)
  print(FeaturePlot(xenium.obj_18072, c(each_circle, each_linear), label = T, pt.size = 1)) #, order=T)
  dev.off()
}
```

<!-- Among these, only a few circles seem to have higher expressions -->
<!-- ```{r fig.align='center'} -->
<!-- VlnPlot(xenium.obj_18072, c("SLC8A1-BSJ"), group.by = "seurat_clusters", pt.size = 0, combine = F) -->
<!-- ``` -->

UMAP + spatial plot
```{r fig.align='center', fig.width=20, fig.height=10}
plot_featureplots("SLC8A1-BSJ")
```

Circles and their hosts expression distribution
```{r fig.align='center'}
boxplot(vec_mean_expr_circle, vec_mean_expr_linear, names = c("Circle", "Linear"), col = c("red","blue"))
```

### Slide 0018071
Read the merged and processed Xenium data for slide 18072
```{r eval=FALSE}
xenium.obj_18071 <- readRDS("/prj/XeniumProbeDesign/heart_human_29072024/xenium_objects_R/18071_merged_processed.rds")
```

Finding marker genes using presto package (much faster than Seurat functions)
```{r eval=FALSE}
all_markers_18071 <- presto::wilcoxauc(xenium.obj_18071,  seurat_assay = "SCT", group_by = "seurat_clusters")
write.csv(all_markers_18071, "/prj/XeniumProbeDesign/heart_human_29072024//xenium_objects_R/0018071_merged_markergenes.csv", quote = F)
```

UMAP plot separated by regions
```{r}
DimPlot(xenium.obj_18071, split.by = "region")
```

#### Cell-type annotations
Cardiomyocytes - 0, 4, 7, 14. Cluster 10 has no clear marker but has high expression of TTN so this is also probably a CM cluster.
```{r fig.align='center', fig.width=10, fig.height=10}
FeaturePlot(xenium.obj_18071, c("TTN-FSJ3"), label = T, label.size = 5)
```

Fibroblasts (markers from https://www.biorxiv.org/content/10.1101/2024.04.27.591127v1.full) - 1,  2, 5, 16
```{r}
FeaturePlot(xenium.obj_18071, c("FBLN1", "LTBP2"), label = T)
```

<!-- Pericytes -  -->
<!-- ```{r} -->
<!-- FeaturePlot(xenium.obj_18071, c("PDGFRB"), label = T) -->
<!-- ``` -->

Endothelial cells - 3, 6, 9, 13
```{r fig.align='center',fig.width=20, fig.height=10}
FeaturePlot(xenium.obj_18071, c("VWF", "PECAM1"), label = T)
```

Macrophages - cluster 8
```{r fig.align='center',fig.width=20, fig.height=10}
FeaturePlot(xenium.obj_18071, c("CD14", "MS4A6A"), label = T, label.size = 5)
```

Pacemaker cells - cluster 12
```{r fig.align='center',fig.width=20, fig.height=10}
FeaturePlot(xenium.obj_18071, c("MYH11"), label = T, label.size = 5)
```

Immune cells - cluster 15
```{r}
FeaturePlot(xenium.obj_18071, c("CXCR4", "CCL5"), label = T, label.size = 5)
```

Rename clusters with real names
```{r eval=FALSE}
new.cluster.ids.71 <- c("CM", "Fibroblasts", "Fibroblasts", "Vascular", "CM", "Fibroblasts", "Vascular",
                        "CM", "Macrophages", "Vascular", "CM-like", "Pacemaker-like",
                        "Pacemaker", "Vascular", "CM", "Immune", "Fibroblasts")
names(new.cluster.ids.71) <- levels(xenium.obj_18071)
xenium.obj_18071 <- RenameIdents(xenium.obj_18071, new.cluster.ids.71)
```

Marker genes on renamed idents
```{r eval=FALSE}
xenium.obj_18071$seurat_clusters_renamed <- Idents(xenium.obj_18071)
all_markers_18071_renamed <- presto::wilcoxauc(xenium.obj_18071,  seurat_assay = "SCT", group_by = "seurat_clusters_renamed")
write.csv(all_markers_18071_renamed, "/prj/XeniumProbeDesign/heart_human_29072024//xenium_objects_R/0018071_merged_markergenes_renamed.csv", quote = F)
```

Spatial plot after renaming cell clusters
```{r}
ImageDimPlot(xenium.obj_18071, dark.background = F, flip_xy = F, size = 0.75)
```